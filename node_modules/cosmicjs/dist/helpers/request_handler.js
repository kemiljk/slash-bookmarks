"use strict";

var axios = require('axios');

var init = function init(config) {
  // Accept Encoding in Node
  if (typeof window === 'undefined') {
    axios.defaults.headers.common['Accept-Encoding'] = 'gzip, deflate';
  }

  if (config && config.token) {
    axios.defaults.headers.common.Authorization = config.token;
  }
};

var requestHandler = function requestHandler(method, url, data, headers) {
  var config = {
    method: method,
    url: url,
    data: data,
    headers: headers
  };
  return axios(config).then(function (response) {
    return response.data;
  })["catch"](function (error) {
    throw error.response ? error.response.data : error.response;
  });
};

module.exports = {
  init: init,
  requestHandler: requestHandler
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9oZWxwZXJzL3JlcXVlc3RfaGFuZGxlci5qcyJdLCJuYW1lcyI6WyJheGlvcyIsInJlcXVpcmUiLCJpbml0IiwiY29uZmlnIiwid2luZG93IiwiZGVmYXVsdHMiLCJoZWFkZXJzIiwiY29tbW9uIiwidG9rZW4iLCJBdXRob3JpemF0aW9uIiwicmVxdWVzdEhhbmRsZXIiLCJtZXRob2QiLCJ1cmwiLCJkYXRhIiwidGhlbiIsInJlc3BvbnNlIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLElBQU1BLEtBQUssR0FBR0MsT0FBTyxDQUFDLE9BQUQsQ0FBckI7O0FBRUEsSUFBTUMsSUFBSSxHQUFHLFNBQVBBLElBQU8sQ0FBQ0MsTUFBRCxFQUFZO0FBQ3ZCO0FBQ0EsTUFBSSxPQUFPQyxNQUFQLEtBQWtCLFdBQXRCLEVBQW1DO0FBQ2pDSixJQUFBQSxLQUFLLENBQUNLLFFBQU4sQ0FBZUMsT0FBZixDQUF1QkMsTUFBdkIsQ0FBOEIsaUJBQTlCLElBQW1ELGVBQW5EO0FBQ0Q7O0FBQ0QsTUFBSUosTUFBTSxJQUFJQSxNQUFNLENBQUNLLEtBQXJCLEVBQTRCO0FBQzFCUixJQUFBQSxLQUFLLENBQUNLLFFBQU4sQ0FBZUMsT0FBZixDQUF1QkMsTUFBdkIsQ0FBOEJFLGFBQTlCLEdBQThDTixNQUFNLENBQUNLLEtBQXJEO0FBQ0Q7QUFDRixDQVJEOztBQVVBLElBQU1FLGNBQWMsR0FBRyxTQUFqQkEsY0FBaUIsQ0FBQ0MsTUFBRCxFQUFTQyxHQUFULEVBQWNDLElBQWQsRUFBb0JQLE9BQXBCLEVBQWdDO0FBQ3JELE1BQU1ILE1BQU0sR0FBRztBQUNiUSxJQUFBQSxNQUFNLEVBQU5BLE1BRGE7QUFFYkMsSUFBQUEsR0FBRyxFQUFIQSxHQUZhO0FBR2JDLElBQUFBLElBQUksRUFBSkEsSUFIYTtBQUliUCxJQUFBQSxPQUFPLEVBQVBBO0FBSmEsR0FBZjtBQU1BLFNBQU9OLEtBQUssQ0FBQ0csTUFBRCxDQUFMLENBQWNXLElBQWQsQ0FBbUIsVUFBQ0MsUUFBRCxFQUFjO0FBQ3RDLFdBQU9BLFFBQVEsQ0FBQ0YsSUFBaEI7QUFDRCxHQUZNLFdBRUUsVUFBQ0csS0FBRCxFQUFXO0FBQ2xCLFVBQU9BLEtBQUssQ0FBQ0QsUUFBTixHQUFpQkMsS0FBSyxDQUFDRCxRQUFOLENBQWVGLElBQWhDLEdBQXVDRyxLQUFLLENBQUNELFFBQXBEO0FBQ0QsR0FKTSxDQUFQO0FBS0QsQ0FaRDs7QUFjQUUsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2ZoQixFQUFBQSxJQUFJLEVBQUpBLElBRGU7QUFFZlEsRUFBQUEsY0FBYyxFQUFkQTtBQUZlLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgYXhpb3MgPSByZXF1aXJlKCdheGlvcycpXG5cbmNvbnN0IGluaXQgPSAoY29uZmlnKSA9PiB7XG4gIC8vIEFjY2VwdCBFbmNvZGluZyBpbiBOb2RlXG4gIGlmICh0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJykge1xuICAgIGF4aW9zLmRlZmF1bHRzLmhlYWRlcnMuY29tbW9uWydBY2NlcHQtRW5jb2RpbmcnXSA9ICdnemlwLCBkZWZsYXRlJ1xuICB9XG4gIGlmIChjb25maWcgJiYgY29uZmlnLnRva2VuKSB7XG4gICAgYXhpb3MuZGVmYXVsdHMuaGVhZGVycy5jb21tb24uQXV0aG9yaXphdGlvbiA9IGNvbmZpZy50b2tlblxuICB9XG59XG5cbmNvbnN0IHJlcXVlc3RIYW5kbGVyID0gKG1ldGhvZCwgdXJsLCBkYXRhLCBoZWFkZXJzKSA9PiB7XG4gIGNvbnN0IGNvbmZpZyA9IHtcbiAgICBtZXRob2QsXG4gICAgdXJsLFxuICAgIGRhdGEsXG4gICAgaGVhZGVyc1xuICB9XG4gIHJldHVybiBheGlvcyhjb25maWcpLnRoZW4oKHJlc3BvbnNlKSA9PiB7XG4gICAgcmV0dXJuIHJlc3BvbnNlLmRhdGFcbiAgfSkuY2F0Y2goKGVycm9yKSA9PiB7IFxuICAgIHRocm93IChlcnJvci5yZXNwb25zZSA/IGVycm9yLnJlc3BvbnNlLmRhdGEgOiBlcnJvci5yZXNwb25zZSlcbiAgfSlcbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGluaXQsXG4gIHJlcXVlc3RIYW5kbGVyXG59XG4iXX0=